@page "/kenai river"
@using RiverCsvReader.Models;
@using System.Globalization;
@using System.Text;
@using System.Web;
@inject HttpClient Http

<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>

<h3>Kenai River</h3>

<p>Map of the kenai river</p>

<div id="map"></div>


<script>
  (g=>
  {var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))
  }
  )
  ({
    key: "AIzaSyA7ulU8xvpqjIPoAy4erd4glaNmvnvLnRw",
    v: "weekly",
    // Use the 'v' parameter to indicate the version to use (weekly, beta, alpha, etc.).
    // Add other bootstrap parameters as needed, using camel case.
  });

</script>


<script>

async function initMap() {
  let map;
  
  const position = { lat: 60.5439, lng: -151.2786 };
  const { Map } = await google.maps.importLibrary("maps");
  const { AdvancedMarkerElement } = await google.maps.importLibrary("marker");

  map = new Map(document.getElementById("map"), {
    center: { lat: 60.5439, lng: -151.2786 },
    zoom: 6,
    mapId: "Salmon Finder",
  });

  const marker = new AdvancedMarkerElement({
    map: map,
    position: position,
    title: "Alaska",
  });

}

initMap(); 

</script>