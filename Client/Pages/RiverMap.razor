@page "/map"
@using RiverCsvReader.Models;
@using System.Globalization;
@using System.Text;
@using System.Web;
@inject HttpClient Http

<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>

<h3>Map of Alaska</h3>

<p>An overall map of 4 Alaskan Rivers, please click on a marker, it will take you to a different tab exploring the river in more detail. Our rivers include, starting left to right, the Nushagak, the Naknek, the Kenai, and the Copper.</p>

<div id="map"></div>

<p></p>

<script>
  (g => {
    var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__", m = document, b = window; b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams, u = () => h || (h = new Promise(async (f, n) => { await (a = m.createElement("script")); e.set("libraries", [...r] + ""); for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]); e.set("callback", c + ".maps." + q); a.src = `https://maps.${c}apis.com/maps/api/js?` + e; d[q] = f; a.onerror = () => h = n(Error(p + " could not load.")); a.nonce = m.querySelector("script[nonce]")?.nonce || ""; m.head.append(a) })); d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n))
  }
  )
    ({
      key: "AIzaSyA7ulU8xvpqjIPoAy4erd4glaNmvnvLnRw",
      v: "weekly",
      // Use the 'v' parameter to indicate the version to use (weekly, beta, alpha, etc.).
      // Add other bootstrap parameters as needed, using camel case.
    });

</script>


<script>

  async function initMap() {
    let map;

    const initialPosition = { lat: 61.2176, lng: -149.8997 };
    const markerPositions = [
      { position: { lat: 60.3886, lng: -144.9608 }, name: "Copper River", path: "/copper river" },
      { position: { lat: 60.5439, lng: -151.2786 }, name: "Kenai River", path: "/kenai river" },
      { position: { lat: 58.7994, lng: -158.6325 }, name: "Nushagak River", path: "/nushagak river" },
      { position: { lat: 58.7186, lng: -157.0656 }, name: "Naknek River", path: "/naknek river" },
      // Add more marker positions here
    ];

    const { Map } = await google.maps.importLibrary("maps");
    const { AdvancedMarkerElement } = await google.maps.importLibrary("marker");
    const { PlacesService } = await google.maps.importLibrary("places");

    map = new Map(document.getElementById("map"), {
      center: initialPosition,
      zoom: 4,
      mapId: "Salmon Finder",
    });

    // Create markers for each position
    markerPositions.forEach(p => {
      new AdvancedMarkerElement({
        map: map,
        position: p.position,
        title: p.Name,
      });
    });

    map.addListener("click", (e) => {

      markerPositions.forEach(p => {
        var request = {
          location: e.latLng,
          radius: '100000', // Search within 1000 meters.
          keyword: p.name
        };

        // Perform Places search
        var service = new google.maps.places.PlacesService(map);
        service.nearbySearch(request, (results, status) => {
          if (status === google.maps.places.PlacesServiceStatus.OK && results.length > 0) {
            if (p.name == results[0].name) {
              window.location.href = p.path;
            }
          }
        });
      });
    });
  }

  initMap();

</script>